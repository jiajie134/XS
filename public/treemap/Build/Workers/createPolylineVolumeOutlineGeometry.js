define(["./when-c2e8ef35","./Check-c4f3a3fc","./Math-d30358ed","./Cartesian2-e875d9d2","./Transforms-822b9ae5","./RuntimeError-6122571f","./WebGLConstants-4ae0db90","./ComponentDatatype-5d3f6452","./GeometryAttribute-d4786828","./GeometryAttributes-57608efc","./IndexDatatype-e3260434","./IntersectionTests-d55ef525","./Plane-a7cca062","./arrayRemoveDuplicates-a580a060","./BoundingRectangle-dd6a50eb","./EllipsoidTangentPlane-13c4990e","./EllipsoidRhumbLine-5134246a","./PolygonPipeline-340caf8b","./PolylineVolumeGeometryLibrary-f316dacb","./EllipsoidGeodesic-19bdf744","./PolylinePipeline-1f9a9de1"],function(d,e,t,c,y,i,n,h,f,g,m,a,r,o,l,s,p,u,v,E,P){"use strict";function _(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions;this._positions=i,this._shape=n,this._ellipsoid=c.Ellipsoid.clone(d.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,v.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,t.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var a=1+i.length*c.Cartesian3.packedLength;a+=1+n.length*c.Cartesian2.packedLength,this.packedLength=a+c.Ellipsoid.packedLength+2}_.pack=function(e,i,n){var a;n=d.defaultValue(n,0);var t=e._positions,r=t.length;for(i[n++]=r,a=0;a<r;++a,n+=c.Cartesian3.packedLength)c.Cartesian3.pack(t[a],i,n);var o=e._shape;for(r=o.length,i[n++]=r,a=0;a<r;++a,n+=c.Cartesian2.packedLength)c.Cartesian2.pack(o[a],i,n);return c.Ellipsoid.pack(e._ellipsoid,i,n),n+=c.Ellipsoid.packedLength,i[n++]=e._cornerType,i[n]=e._granularity,i};var k=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),C={polylinePositions:void 0,shapePositions:void 0,ellipsoid:k,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(e,i,n){var a;i=d.defaultValue(i,0);var t=e[i++],r=new Array(t);for(a=0;a<t;++a,i+=c.Cartesian3.packedLength)r[a]=c.Cartesian3.unpack(e,i);t=e[i++];var o=new Array(t);for(a=0;a<t;++a,i+=c.Cartesian2.packedLength)o[a]=c.Cartesian2.unpack(e,i);var l=c.Ellipsoid.unpack(e,i,k);i+=c.Ellipsoid.packedLength;var s=e[i++],p=e[i];return d.defined(n)?(n._positions=r,n._shape=o,n._ellipsoid=c.Ellipsoid.clone(l,n._ellipsoid),n._cornerType=s,n._granularity=p,n):(C.polylinePositions=r,C.shapePositions=o,C.cornerType=s,C.granularity=p,new _(C))};var b=new l.BoundingRectangle;return _.createGeometry=function(e){var i=e._positions,n=o.arrayRemoveDuplicates(i,c.Cartesian3.equalsEpsilon),a=e._shape;if(a=v.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(a),!(n.length<2||a.length<3)){u.PolygonPipeline.computeWindingOrder2D(a)===u.WindingOrder.CLOCKWISE&&a.reverse();var t=l.BoundingRectangle.fromPoints(a,b);return function(e,i){var n=new g.GeometryAttributes;n.position=new f.GeometryAttribute({componentDatatype:h.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var a,t,r=i.length,o=n.position.values.length/3,l=e.length/3/r,s=m.IndexDatatype.createTypedArray(o,2*r*(1+l)),p=0,d=(a=0)*r;for(t=0;t<r-1;t++)s[p++]=t+d,s[p++]=t+d+1;for(s[p++]=r-1+d,s[p++]=d,d=(a=l-1)*r,t=0;t<r-1;t++)s[p++]=t+d,s[p++]=t+d+1;for(s[p++]=r-1+d,s[p++]=d,a=0;a<l-1;a++){var c=r*a,u=c+r;for(t=0;t<r;t++)s[p++]=t+c,s[p++]=t+u}return new f.Geometry({attributes:n,indices:m.IndexDatatype.createTypedArray(o,s),boundingSphere:y.BoundingSphere.fromVertices(e),primitiveType:f.PrimitiveType.LINES})}(v.PolylineVolumeGeometryLibrary.computePositions(n,a,t,e,!1),a)}},function(e,i){return d.defined(i)&&(e=_.unpack(e,i)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),_.createGeometry(e)}});
